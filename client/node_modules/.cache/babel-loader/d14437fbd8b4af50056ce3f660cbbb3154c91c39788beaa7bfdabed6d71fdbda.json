{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\PI-CI0128-Grupo-X\\\\client\\\\src\\\\pages\\\\Rooms.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport '../styles.scss';\nimport axios from \"axios\";\nimport X from \"../img/X.png\";\nimport Plus from \"../img/Add.png\";\nimport { showErrorDialog, updateContainer, emptyContainer, postDataWithTimeout } from '../Misc';\nimport { AuthContext } from '../AuthContext.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rooms = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    userRol\n  } = useContext(AuthContext);\n  const [roomTypeOption, setRoomTypeOption] = useState('');\n  const [file, setFile] = useState(null);\n  const [room_types, setRoomTypes] = useState([]);\n  const [inputs, setInputs] = useState({\n    name: \"\",\n    desc: \"\",\n    search: \"\",\n    delete: \"\",\n    filename: \"\",\n    room_type: 0,\n    room_type_name: \"\",\n    room_type_price: 0\n  });\n\n  // Function to add a room type to the UI\n  const addRoomType = (title, price, id) => {\n    // Selecting the container for room types\n    const roomsTypeContainer = document.querySelector('.rooms_type-container');\n\n    // Generating HTML for the new room type\n    const newRoomTypeHTML = `\n    <div class=\"list-item\" style=\"margin-left: 28%; width: 40%\">\n      <div>\n        <h3 style=\"color: white; \n        word-wrap: break-word;\n        max-width: 240px\">${title}</h3>\n        <p style=\"color: white; \n        word-wrap: break-word;\n        max-width: 240px\">Price: ${price}</p>\n      </div>\n      <!-- Delete button for the room type -->\n      <button class=\"delete-button\" id=\"delete-room_type-button-${title}\">\n        <img src=${X} alt=\"X\" id=\"XImg\" style=\"width:40px; height:40px; background-color: transparent;\"/>\n      </button>\n    </div>\n  `;\n\n    // Inserting the new room type HTML into the container\n    roomsTypeContainer.insertAdjacentHTML('beforeend', newRoomTypeHTML);\n\n    // Adding event listener to the delete button\n    const deleteButton = document.getElementById(\"delete-room_type-button-\" + title);\n    deleteButton.addEventListener('click', e => handleRoomTypeDelete(e, id));\n  };\n\n  // Function to add a card to the UI\n  const addCard = (title, description, room_type, filename, id) => {\n    // Truncating description to fit into card display\n    description = description.substring(0, 90);\n\n    // Selecting the container for cards\n    const cardsContainer = document.querySelector('.list-container');\n\n    // Generating HTML for the new card\n    const newCardHTML = `\n    <div class=\"list-item\">\n      <img src=\"${filename}\" alt=\"${filename}\"/>\n      <div>\n        <h3 style=\"\n        word-wrap: break-word;\n        max-width: 240px;\">${title}</h3>\n        <h3 style=\"\n        word-wrap: break-word;\n        max-width: 240px;\">Room Type: ${room_type}</h3>\n        <p style=\"\n        word-wrap: break-word;\n        max-width: 240px;\">${description}</p>\n      </div>\n      <!-- Delete button for the card -->\n      <button class=\"delete-button\" id=\"delete-room-button-${title}\">\n        <img src=${X} alt=\"X\" id=\"XImg\" style=\"width:40px; height:40px; background-color: transparent;\"/>\n      </button>\n    </div>\n  `;\n\n    // Inserting the new card HTML into the container\n    cardsContainer.insertAdjacentHTML('beforeend', newCardHTML);\n\n    // Adding event listener to the delete button\n    const deleteButton = document.getElementById(\"delete-room-button-\" + title);\n    deleteButton.addEventListener('click', e => handleDelete(e, id));\n  };\n  const handleRoomTypeChange = e => {\n    setRoomTypeOption(e.target.value);\n  };\n\n  // Function to fetch data and populate UI\n  const fetchData = useCallback(async () => {\n    if (userRol !== \"admin\" && userRol !== \"employee\") {\n      return;\n    }\n    // Selecting containers for room types and cards\n    const roomTypesContainer = document.querySelector('.rooms_type-container');\n    const cardsContainer = document.querySelector('.list-container');\n    try {\n      // Fetching room types data\n      const roomTypesResponse = await axios.get('/rooms/room_types');\n\n      // Setting room types state and default room type option\n      if (roomTypesResponse.data[0]) {\n        setRoomTypes(roomTypesResponse.data);\n        setRoomTypeOption(roomTypesResponse.data[0].categoryid);\n      }\n\n      // Clearing room types container\n      emptyContainer(roomTypesContainer);\n\n      // Adding room types to UI\n      roomTypesResponse.data.forEach(room_type => {\n        addRoomType(room_type.class_name, room_type.price, room_type.categoryid);\n      });\n\n      // Updating room types container\n      updateContainer(roomTypesContainer);\n\n      // Fetching rooms data\n      const roomsResponse = await axios.get(\"/rooms\");\n\n      // Fetching filenames of room images\n      const filenamesResponse = await axios.get(`/files/retrieve_images`);\n      var i = 0;\n\n      // Clearing cards container\n      emptyContainer(cardsContainer);\n\n      // Adding cards for each room to UI\n      roomsResponse.data.forEach(room => {\n        if (i >= filenamesResponse.data.length) {\n          // If there are no more filenames, update container and return\n          updateContainer(cardsContainer);\n          return;\n        }\n\n        // Generating filepath for room image\n        const filepath = \"/upload/\" + filenamesResponse.data[i].filename;\n        let selectedRoomType;\n\n        // Retrieve categoryid that equals room's room type\n        for (let i = 0; i < roomTypesResponse.data.length; i++) {\n          if (roomTypesResponse.data[i].categoryid === room.type_of_room) {\n            selectedRoomType = roomTypesResponse.data[i];\n            break;\n          }\n        }\n\n        // Adding card for the room to UI\n        addCard(room.title, room.description, selectedRoomType.class_name, filepath, room.roomid);\n        i++;\n      });\n\n      // Updating cards container\n      updateContainer(cardsContainer);\n      return;\n    } catch (error) {\n      showErrorDialog(\"An error occurred:\", error);\n    }\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleRoomTypeDelete = async (e, id) => {\n    e.preventDefault();\n    try {\n      await axios.delete(`/rooms/delete_room_type${id}`);\n    } catch (error) {\n      showErrorDialog(\"An error occurred:\", error);\n    }\n    fetchData();\n  };\n  const handleDelete = async (e, id) => {\n    e.preventDefault();\n    try {\n      await axios.delete(`/rooms/delete${id}`);\n    } catch (error) {\n      showErrorDialog(\"An error occurred:\", error);\n    }\n    fetchData();\n  };\n\n  // Function to handle file input change\n  const handleFileChange = e => {\n    // Getting the file input element\n    const fileInput = e.target;\n\n    // Getting the selected file\n    const file = fileInput.files[0];\n\n    // Getting the image preview element\n    const imagePreview = document.getElementById('image-preview');\n    if (file) {\n      // If a file is selected\n      const reader = new FileReader();\n\n      // Function to handle when file reading is completed\n      reader.onload = function (e) {\n        // Displaying the image preview\n        imagePreview.src = e.target.result;\n        imagePreview.style.display = 'block';\n      };\n\n      // Reading the selected file as data URL\n      reader.readAsDataURL(file);\n\n      // Setting the file state\n      setFile(e.target.files[0]);\n    } else {\n      // If no file is selected, reset the image preview\n      imagePreview.src = '#';\n      imagePreview.style.display = 'none';\n    }\n  };\n  const handleRoomTypeSubmit = async e => {\n    e.preventDefault();\n    if (!inputs.room_type_name) {\n      showErrorDialog(\"An error occurred:\", \"Please add a room type name\");\n      return;\n    }\n    if (!inputs.room_type_price) {\n      showErrorDialog(\"An error occurred:\", \"Please add a price\");\n      return;\n    }\n    try {\n      await postDataWithTimeout(\"/rooms/add_room_type\", inputs, 500);\n      fetchData();\n      closeRoomTypeModal();\n      return;\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        const errorMessage = error.response.data;\n        showErrorDialog(\"An error occurred:\", errorMessage);\n      } else {\n        showErrorDialog(\"An error occurred:\", error);\n      }\n    }\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Preventing default form submission behavior\n\n    // Validating file upload\n    if (!file) {\n      showErrorDialog(\"An error occurred:\", \"Please upload an image\");\n      return;\n    }\n\n    // Validating title\n    if (!inputs.name) {\n      showErrorDialog(\"An error occurred:\", \"Please add a title\");\n      return;\n    }\n\n    // Validating description\n    if (!inputs.desc) {\n      showErrorDialog(\"An error occurred:\", \"Please add a description\");\n      return;\n    }\n    try {\n      // Creating FormData object for form data\n      const formData = new FormData();\n      formData.append('image', file);\n      var filename = \"\";\n\n      // Uploading image file\n      filename = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Appending other form data to FormData object\n      Object.entries(inputs).forEach(([key, value]) => {\n        formData.append(key, value);\n      });\n\n      // Setting filename in inputs\n      inputs.filename = filename;\n      inputs.room_type = roomTypeOption;\n\n      // Adding room data to database\n      await postDataWithTimeout(\"/rooms/add_room\", inputs, 500);\n      fetchData();\n      closeModal();\n      return;\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        // Handling specific error response\n        const errorMessage = error.response.data;\n        showErrorDialog(\"An error occurred:\", errorMessage);\n      } else {\n        // Handling generic error\n        showErrorDialog(\"An error occurred:\", error);\n      }\n    }\n  };\n  function displayRoomTypeModal() {\n    var modal = document.getElementById(\"roomTypeModal\");\n    modal.style.display = \"block\";\n  }\n  function closeRoomTypeModal() {\n    var modal = document.getElementById(\"roomTypeModal\");\n    modal.style.display = \"none\";\n  }\n  function displayModal() {\n    var modal = document.getElementById(\"myFormModal\");\n    modal.style.display = \"block\";\n  }\n  function closeModal() {\n    var modal = document.getElementById(\"myFormModal\");\n    modal.style.display = \"none\";\n  }\n  const handleChange = e => {\n    setInputs(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  return userRol === \"admin\" || userRol === \"employee\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myFormModal\",\n      className: \"form-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"myForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"file-input\",\n              className: \"file-input\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file-input\",\n              className: \"file-input-label\",\n              children: \"Choose an image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"image-preview\",\n              className: \"image-preview\",\n              src: \"#\",\n              alt: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 80\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"desc\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"desc\",\n            name: \"desc\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"room_types_selector\",\n            children: \"Room Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"room_types_selector\",\n            className: \"room_types_selector\",\n            id: \"room_types_selector_1\",\n            onChange: handleRoomTypeChange,\n            value: roomTypeOption,\n            required: true,\n            children: room_types.map(room_type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: room_type.categoryid,\n              children: room_type.class_name\n            }, room_type.categoryid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Plus\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Plus,\n              alt: \"Plus\",\n              id: \"plusImg\",\n              onClick: handleSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"roomTypeModal\",\n      className: \"form-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: closeRoomTypeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"myForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"room_type_name\",\n            children: \"Room Type Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"room_type_name\",\n            name: \"room_type_name\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 100\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"room_type_price\",\n            children: \"Room Type Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 69\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"room_type_price\",\n            name: \"room_type_price\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 104\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Plus\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Plus,\n              alt: \"Plus\",\n              id: \"plusImg\",\n              onClick: handleRoomTypeSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"room_types-title\",\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: \"Room Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rooms_type-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-room-type-button\",\n          onClick: displayRoomTypeModal,\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: \"Add Room Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 83\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"rooms-title\",\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: \"Rooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-room-button\",\n          onClick: displayModal,\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: \"Add Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showErrorDialog(\"Error: \", \"You must login as admin or employee to access this page\", true, navigate)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 7\n  }, this);\n};\n_s(Rooms, \"kPXFFYwRmg8Q/6SLuxdyGcC29zo=\", false, function () {\n  return [useNavigate];\n});\n_c = Rooms;\nexport default Rooms;\nvar _c;\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","axios","X","Plus","showErrorDialog","updateContainer","emptyContainer","postDataWithTimeout","AuthContext","useNavigate","jsxDEV","_jsxDEV","Rooms","_s","navigate","userRol","roomTypeOption","setRoomTypeOption","file","setFile","room_types","setRoomTypes","inputs","setInputs","name","desc","search","delete","filename","room_type","room_type_name","room_type_price","addRoomType","title","price","id","roomsTypeContainer","document","querySelector","newRoomTypeHTML","insertAdjacentHTML","deleteButton","getElementById","addEventListener","e","handleRoomTypeDelete","addCard","description","substring","cardsContainer","newCardHTML","handleDelete","handleRoomTypeChange","target","value","fetchData","roomTypesContainer","roomTypesResponse","get","data","categoryid","forEach","class_name","roomsResponse","filenamesResponse","i","room","length","filepath","selectedRoomType","type_of_room","roomid","error","preventDefault","handleFileChange","fileInput","files","imagePreview","reader","FileReader","onload","src","result","style","display","readAsDataURL","handleRoomTypeSubmit","closeRoomTypeModal","response","status","errorMessage","handleSubmit","formData","FormData","append","post","headers","Object","entries","key","closeModal","displayRoomTypeModal","modal","displayModal","handleChange","prev","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","htmlFor","alt","required","map","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/PI-CI0128-Grupo-X/client/src/pages/Rooms.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useContext, useEffect, useCallback } from 'react'\r\nimport '../styles.scss';\r\nimport axios from \"axios\"\r\nimport X from \"../img/X.png\"\r\nimport Plus from \"../img/Add.png\"\r\nimport { showErrorDialog, updateContainer, emptyContainer, postDataWithTimeout } from '../Misc';\r\nimport { AuthContext } from '../AuthContext.js';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Rooms = () => {\r\n  const navigate = useNavigate()\r\n  const { userRol } = useContext(AuthContext);\r\n  const [roomTypeOption, setRoomTypeOption] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [room_types, setRoomTypes] = useState([]);\r\n  const [inputs, setInputs] = useState({\r\n    name: \"\",\r\n    desc: \"\",\r\n    search: \"\",\r\n    delete: \"\",\r\n    filename: \"\",\r\n    room_type: 0,\r\n    room_type_name: \"\",\r\n    room_type_price: 0,\r\n  })\r\n\r\n  // Function to add a room type to the UI\r\n  const addRoomType = (title, price, id) => {\r\n    // Selecting the container for room types\r\n    const roomsTypeContainer = document.querySelector('.rooms_type-container');\r\n\r\n    // Generating HTML for the new room type\r\n    const newRoomTypeHTML = `\r\n    <div class=\"list-item\" style=\"margin-left: 28%; width: 40%\">\r\n      <div>\r\n        <h3 style=\"color: white; \r\n        word-wrap: break-word;\r\n        max-width: 240px\">${title}</h3>\r\n        <p style=\"color: white; \r\n        word-wrap: break-word;\r\n        max-width: 240px\">Price: ${price}</p>\r\n      </div>\r\n      <!-- Delete button for the room type -->\r\n      <button class=\"delete-button\" id=\"delete-room_type-button-${title}\">\r\n        <img src=${X} alt=\"X\" id=\"XImg\" style=\"width:40px; height:40px; background-color: transparent;\"/>\r\n      </button>\r\n    </div>\r\n  `;\r\n\r\n    // Inserting the new room type HTML into the container\r\n    roomsTypeContainer.insertAdjacentHTML('beforeend', newRoomTypeHTML);\r\n\r\n    // Adding event listener to the delete button\r\n    const deleteButton = document.getElementById(\"delete-room_type-button-\" + title);\r\n    deleteButton.addEventListener('click', (e) => handleRoomTypeDelete(e, id));\r\n  };\r\n\r\n  // Function to add a card to the UI\r\n  const addCard = (title, description, room_type, filename, id) => {\r\n    // Truncating description to fit into card display\r\n    description = description.substring(0, 90);\r\n\r\n    // Selecting the container for cards\r\n    const cardsContainer = document.querySelector('.list-container');\r\n\r\n    // Generating HTML for the new card\r\n    const newCardHTML = `\r\n    <div class=\"list-item\">\r\n      <img src=\"${filename}\" alt=\"${filename}\"/>\r\n      <div>\r\n        <h3 style=\"\r\n        word-wrap: break-word;\r\n        max-width: 240px;\">${title}</h3>\r\n        <h3 style=\"\r\n        word-wrap: break-word;\r\n        max-width: 240px;\">Room Type: ${room_type}</h3>\r\n        <p style=\"\r\n        word-wrap: break-word;\r\n        max-width: 240px;\">${description}</p>\r\n      </div>\r\n      <!-- Delete button for the card -->\r\n      <button class=\"delete-button\" id=\"delete-room-button-${title}\">\r\n        <img src=${X} alt=\"X\" id=\"XImg\" style=\"width:40px; height:40px; background-color: transparent;\"/>\r\n      </button>\r\n    </div>\r\n  `;\r\n\r\n    // Inserting the new card HTML into the container\r\n    cardsContainer.insertAdjacentHTML('beforeend', newCardHTML);\r\n\r\n    // Adding event listener to the delete button\r\n    const deleteButton = document.getElementById(\"delete-room-button-\" + title);\r\n    deleteButton.addEventListener('click', (e) => handleDelete(e, id));\r\n  };\r\n\r\n  const handleRoomTypeChange = (e) => {\r\n    setRoomTypeOption(e.target.value);\r\n  };\r\n\r\n  // Function to fetch data and populate UI\r\n  const fetchData = useCallback(async () => {\r\n    if (userRol !== \"admin\" && userRol !== \"employee\") {\r\n      return;\r\n    }\r\n    // Selecting containers for room types and cards\r\n    const roomTypesContainer = document.querySelector('.rooms_type-container');\r\n    const cardsContainer = document.querySelector('.list-container');\r\n\r\n    try {\r\n      // Fetching room types data\r\n      const roomTypesResponse = await axios.get('/rooms/room_types');\r\n\r\n      // Setting room types state and default room type option\r\n      if (roomTypesResponse.data[0]) {\r\n        setRoomTypes(roomTypesResponse.data);\r\n        setRoomTypeOption(roomTypesResponse.data[0].categoryid);\r\n      }\r\n\r\n      // Clearing room types container\r\n      emptyContainer(roomTypesContainer);\r\n\r\n      // Adding room types to UI\r\n      roomTypesResponse.data.forEach(room_type => {\r\n        addRoomType(room_type.class_name, room_type.price, room_type.categoryid);\r\n      });\r\n\r\n      // Updating room types container\r\n      updateContainer(roomTypesContainer);\r\n\r\n      // Fetching rooms data\r\n      const roomsResponse = await axios.get(\"/rooms\");\r\n\r\n      // Fetching filenames of room images\r\n      const filenamesResponse = await axios.get(`/files/retrieve_images`);\r\n      var i = 0;\r\n\r\n      // Clearing cards container\r\n      emptyContainer(cardsContainer);\r\n\r\n      // Adding cards for each room to UI\r\n      roomsResponse.data.forEach(room => {\r\n        if (i >= filenamesResponse.data.length) {\r\n          // If there are no more filenames, update container and return\r\n          updateContainer(cardsContainer);\r\n          return;\r\n        }\r\n\r\n        // Generating filepath for room image\r\n        const filepath = \"/upload/\" + filenamesResponse.data[i].filename;\r\n\r\n        let selectedRoomType;\r\n        \r\n        // Retrieve categoryid that equals room's room type\r\n        for (let i = 0; i < roomTypesResponse.data.length; i++) {\r\n          if (roomTypesResponse.data[i].categoryid === room.type_of_room) {\r\n            selectedRoomType = roomTypesResponse.data[i];\r\n            break;\r\n          }\r\n        }\r\n\r\n        // Adding card for the room to UI\r\n        addCard(room.title, room.description, selectedRoomType.class_name, filepath, room.roomid);\r\n        i++;\r\n      });\r\n\r\n      // Updating cards container\r\n      updateContainer(cardsContainer);\r\n\r\n      return;\r\n    } catch (error) {\r\n      showErrorDialog(\"An error occurred:\", error);\r\n    }\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleRoomTypeDelete = async (e, id) => {\r\n    e.preventDefault()\r\n    try {\r\n      await axios.delete(`/rooms/delete_room_type${id}`);\r\n    } catch (error) {\r\n      showErrorDialog(\"An error occurred:\", error);\r\n    }\r\n    fetchData();\r\n  }\r\n\r\n  const handleDelete = async (e, id) => {\r\n    e.preventDefault()\r\n    try {\r\n      await axios.delete(`/rooms/delete${id}`);\r\n    } catch (error) {\r\n      showErrorDialog(\"An error occurred:\", error);\r\n    }\r\n    fetchData();\r\n  }\r\n\r\n  // Function to handle file input change\r\n  const handleFileChange = (e) => {\r\n    // Getting the file input element\r\n    const fileInput = e.target;\r\n\r\n    // Getting the selected file\r\n    const file = fileInput.files[0];\r\n\r\n    // Getting the image preview element\r\n    const imagePreview = document.getElementById('image-preview');\r\n\r\n    if (file) {\r\n      // If a file is selected\r\n      const reader = new FileReader();\r\n\r\n      // Function to handle when file reading is completed\r\n      reader.onload = function (e) {\r\n        // Displaying the image preview\r\n        imagePreview.src = e.target.result;\r\n        imagePreview.style.display = 'block';\r\n      };\r\n\r\n      // Reading the selected file as data URL\r\n      reader.readAsDataURL(file);\r\n\r\n      // Setting the file state\r\n      setFile(e.target.files[0]);\r\n    } else {\r\n      // If no file is selected, reset the image preview\r\n      imagePreview.src = '#';\r\n      imagePreview.style.display = 'none';\r\n    }\r\n  };\r\n\r\n  const handleRoomTypeSubmit = async e => {\r\n    e.preventDefault()\r\n    if (!inputs.room_type_name) {\r\n      showErrorDialog(\"An error occurred:\", \"Please add a room type name\");\r\n      return;\r\n    }\r\n    if (!inputs.room_type_price) {\r\n      showErrorDialog(\"An error occurred:\", \"Please add a price\");\r\n      return;\r\n    }\r\n    try {\r\n      await postDataWithTimeout(\"/rooms/add_room_type\", inputs, 500);\r\n      fetchData();\r\n      closeRoomTypeModal();\r\n      return;\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 404) {\r\n        const errorMessage = error.response.data;\r\n        showErrorDialog(\"An error occurred:\", errorMessage);\r\n      } else {\r\n        showErrorDialog(\"An error occurred:\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = async e => {\r\n    e.preventDefault(); // Preventing default form submission behavior\r\n\r\n    // Validating file upload\r\n    if (!file) {\r\n      showErrorDialog(\"An error occurred:\", \"Please upload an image\");\r\n      return;\r\n    }\r\n\r\n    // Validating title\r\n    if (!inputs.name) {\r\n      showErrorDialog(\"An error occurred:\", \"Please add a title\");\r\n      return;\r\n    }\r\n\r\n    // Validating description\r\n    if (!inputs.desc) {\r\n      showErrorDialog(\"An error occurred:\", \"Please add a description\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Creating FormData object for form data\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n      var filename = \"\";\r\n\r\n      // Uploading image file\r\n      filename = await axios.post('/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n\r\n      // Appending other form data to FormData object\r\n      Object.entries(inputs).forEach(([key, value]) => {\r\n        formData.append(key, value);\r\n      });\r\n\r\n      // Setting filename in inputs\r\n      inputs.filename = filename;\r\n      inputs.room_type = roomTypeOption;\r\n\r\n      // Adding room data to database\r\n      await postDataWithTimeout(\"/rooms/add_room\", inputs, 500);\r\n      fetchData();\r\n      closeModal();\r\n      return;\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 404) {\r\n        // Handling specific error response\r\n        const errorMessage = error.response.data;\r\n        showErrorDialog(\"An error occurred:\", errorMessage);\r\n      } else {\r\n        // Handling generic error\r\n        showErrorDialog(\"An error occurred:\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  function displayRoomTypeModal() {\r\n    var modal = document.getElementById(\"roomTypeModal\");\r\n    modal.style.display = \"block\";\r\n  }\r\n\r\n  function closeRoomTypeModal() {\r\n    var modal = document.getElementById(\"roomTypeModal\");\r\n    modal.style.display = \"none\";\r\n  }\r\n\r\n  function displayModal() {\r\n    var modal = document.getElementById(\"myFormModal\");\r\n    modal.style.display = \"block\";\r\n  }\r\n\r\n  function closeModal() {\r\n    var modal = document.getElementById(\"myFormModal\");\r\n    modal.style.display = \"none\";\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setInputs(prev => ({ ...prev, [e.target.name]: e.target.value }))\r\n  }\r\n\r\n  return (userRol === \"admin\" || userRol === \"employee\" ?\r\n    <div className='body'>\r\n      {/* Form modal for adding rooms */}\r\n      <div id=\"myFormModal\" className=\"form-modal\">\r\n        <div className=\"form-modal-content\">\r\n          <span className=\"close\" onClick={closeModal}>&times;</span>\r\n          <form id=\"myForm\">\r\n            {/* File input for uploading image */}\r\n            <div className=\"file-input-container\">\r\n              <input type=\"file\" id=\"file-input\" className=\"file-input\" onChange={handleFileChange} />\r\n              <label htmlFor=\"file-input\" className=\"file-input-label\">Choose an image</label>\r\n              <img id=\"image-preview\" className=\"image-preview\" src=\"#\" alt=\"Preview\" />\r\n            </div>\r\n            {/* Input field for room title */}\r\n            <label htmlFor=\"name\">Title</label><br />\r\n            <input type=\"text\" id=\"name\" name=\"name\" onChange={handleChange} /><br />\r\n            {/* Textarea for room description */}\r\n            <label htmlFor=\"desc\">Description</label><br />\r\n            <textarea id=\"desc\" name=\"desc\" onChange={handleChange} ></textarea>\r\n            {/* Dropdown for selecting room type */}\r\n            <label htmlFor=\"room_types_selector\">Room Type</label><br />\r\n            <select name=\"room_types_selector\" className=\"room_types_selector\" id=\"room_types_selector_1\"\r\n              onChange={handleRoomTypeChange} value={roomTypeOption} required>\r\n              {/* Mapping room types to options */}\r\n              {room_types.map(room_type => (\r\n                <option key={room_type.categoryid} value={room_type.categoryid}>{room_type.class_name}</option>\r\n              ))}\r\n            </select>\r\n            {/* Button to add room */}\r\n            <button className=\"Plus\">\r\n              <img src={Plus} alt=\"Plus\" id=\"plusImg\" onClick={handleSubmit} />\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {/* Form modal for adding room type */}\r\n      <div id=\"roomTypeModal\" className=\"form-modal\">\r\n        <div className=\"form-modal-content\">\r\n          <span className=\"close\" onClick={closeRoomTypeModal}>&times;</span>\r\n          <form id=\"myForm\">\r\n            {/* Input field for room type name */}\r\n            <label htmlFor=\"room_type_name\">Room Type Name</label><br />\r\n            <input type=\"text\" id=\"room_type_name\" name=\"room_type_name\" onChange={handleChange} /><br />\r\n            {/* Input field for room type price */}\r\n            <label htmlFor=\"room_type_price\">Room Type Price</label><br />\r\n            <input type=\"number\" id=\"room_type_price\" name=\"room_type_price\" onChange={handleChange} /><br />\r\n            {/* Button to add room type */}\r\n            <button className=\"Plus\">\r\n              <img src={Plus} alt=\"Plus\" id=\"plusImg\" onClick={handleRoomTypeSubmit} />\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {/* Admin container */}\r\n      <div className='admin-container'>\r\n        {/* Section for room types */}\r\n        <div>\r\n          <h1 className='room_types-title'><center>Room Types</center></h1>\r\n          <div className=\"rooms_type-container\">\r\n          </div>\r\n          {/* Button to display room type modal */}\r\n          <button className=\"add-room-type-button\" onClick={displayRoomTypeModal}><center>Add Room Type</center></button>\r\n        </div>\r\n        {/* Section for rooms */}\r\n        <div>\r\n          <h1 className='rooms-title'><center>Rooms</center></h1>\r\n          <div className=\"list-container\">\r\n          </div>\r\n          {/* Button to display add room modal */}\r\n          <button className=\"add-room-button\" onClick={displayModal}><center>Add Room</center></button>\r\n        </div>\r\n      </div>\r\n    </div >\r\n    : <div>{showErrorDialog(\"Error: \", \"You must login as admin or employee to access this page\", true, navigate)}</div>);\r\n};\r\n\r\nexport default Rooms;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}