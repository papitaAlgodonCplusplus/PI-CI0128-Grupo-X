{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\PI-CI0128-Grupo-X\\\\client\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable no-use-before-define */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport '../styles.scss';\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport StarIcon from \"../img/Star.png\";\nimport SearchIcon from \"../img/Search.png\";\nimport CouponIcon from \"../img/Coupon.png\";\nimport 'react-calendar/dist/Calendar.css';\nimport Calendar from 'react-calendar';\nimport { Context } from '../Context.js';\nimport { AuthContext } from '../AuthContext.js';\nimport { emptyContainer, updateContainer, showErrorDialog } from \"../Misc.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    isLoggedIn\n  } = useContext(AuthContext);\n  let cardsContainer = null;\n  const [modalVisible, setModalVisible] = useState(false);\n  const [inputs, setInputs] = useState({\n    name: \"\",\n    desc: \"\",\n    searchQuery: \"\",\n    delete: \"\",\n    filename: \"\"\n  });\n  const {\n    changeLastRoomClickedID\n  } = useContext(Context);\n  const navigate = useNavigate();\n  const [selectedDates, setSelectedDates] = useState(null);\n  const addCardToUI = useCallback((title, description, imageSrc, roomId) => {\n    // Construct HTML for a new card dynamically\n    const newCardHTML = `\n      <div style=\"\n        height: 220px;\n        background-color: #f0f0f0;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.5);\n        display: grid;\n        grid-template-columns: 60% 40%;\n        padding-top: 1.5%;\n        gap: 10px;\n        text-align: justify;\n        overflow: hidden;\" className=\"card\" data-title=\"${title}\">\n        <div><img src=\"${imageSrc}\" alt=\"View of the room\" style=\"width: 360px;\n        height: 220px;\n        border-radius: 8px;\"></img></div>\n        <div>\n          <h2 style=\"\n          margin: 0;\n          position: static; \n          word-wrap: break-word;\"><center>${title}</center></h2>\n          <p style=\"\n          margin: 3%;\n          position: static;\n          display: -webkit-box;\n          overflow: hidden;\n          -webkit-line-clamp: 7;\n          -webkit-box-orient: vertical;\n          word-wrap: break-word;\">${description}</p>\n          <div className=\"icon-container\" style=\"\n          margin-top: 4%;\n          display: flex;\">\n            <div className=\"icon-container-left-column\" style=\"\n            margin: 0;\n            padding: 0;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 4%;\n            flex: 60%;\">\n              <img src=${StarIcon} alt=\"Star 1\" style=\"\n              border-radius: 8px;\n              margin: 0;\n              padding: 0;\n              max-width: 20%;\n              height: auto;\"/>\n              <img src=${StarIcon} alt=\"Star 2\" style=\"\n              border-radius: 8px;\n              margin: 0;\n              padding: 0;\n              max-width: 20%;\n              height: auto;\"/>\n              <img src=${StarIcon} alt=\"Star 3\" style=\"\n              border-radius: 8px;\n              margin: 0;\n              padding: 0;\n              max-width: 20%;\n              height: auto;\"/>\n              <img src=${StarIcon} alt=\"Star 4\" style=\"\n              border-radius: 8px;\n              margin: 0;\n              padding: 0;\n              max-width: 20%;\n              height: auto;\"/>\n              <img src=${StarIcon} alt=\"Star 5\" style=\"\n              border-radius: 8px;\n              margin: 0;\n              padding: 0;\n              max-width: 20%;\n              height: auto;\"/>\n            </div>\n            <div className=\"icon-container-right-column\" style=\"\n            margin: 0;\n            padding: 0;\n            margin-left: 5%;\n            flex: 30%;\">\n              <img src=${CouponIcon} alt=\"Coupon\" style=\"\n              margin-top: 8%;\n              border-radius: 8px;\n              flex: 1;\n              padding: 1%;\n              width: 60%;\n              height: auto;\"/>\n            </div>\n            <div className=\"icon-container-right-column-2\" style=\"\n            margin: 0;\n            padding: 0;\n            flex: 20%;\">\n            <button id=\"room-details-button-${title}\" style={{margin: \"0%\"}}>Details</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n\n    // Append the new card to the cards container\n    cardsContainer = document.querySelector('.cards-container');\n    cardsContainer.insertAdjacentHTML('beforeend', newCardHTML);\n    const detailsButton = document.getElementById(\"room-details-button-\" + title);\n    detailsButton.addEventListener('click', e => handleOpenDetails(e, roomId));\n  });\n  const handleChange = e => {\n    // Update input state when input values change\n    setInputs(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleOpenDetails = async (e, roomId) => {\n    // Handle click event to open details page for a room\n    e.preventDefault();\n    changeLastRoomClickedID(roomId);\n    navigate(\"/details\");\n  };\n  const fetchDataFromServer = async () => {\n    // Fetch data from the server to display rooms\n    try {\n      cardsContainer = document.querySelector('.cards-container');\n      const roomsResponse = await axios.get(\"/rooms\");\n      const imageFilesResponse = await axios.get(`/files/retrieve_images`);\n      let imageIndex = 0;\n      emptyContainer(cardsContainer);\n      roomsResponse.data.forEach(room => {\n        if (imageIndex >= imageFilesResponse.data.length) {\n          updateContainer(cardsContainer);\n          return;\n        }\n        const imagePath = \"/upload/\" + imageFilesResponse.data[imageIndex].filename;\n        addCardToUI(room.title, room.description, imagePath, room.roomid);\n        imageIndex++;\n      });\n      updateContainer(cardsContainer);\n      return;\n    } catch (error) {\n      showErrorDialog(\"An error occurred:\", error, false, navigate);\n    }\n  };\n  useEffect(() => {\n    // Fetch data when component mounts\n    cardsContainer = document.querySelector('.cards-container');\n    if (!isLoggedIn) {\n      return;\n    }\n    fetchDataFromServer();\n  }, []);\n  const handleSearch = async e => {\n    e.preventDefault();\n    const searchTerm = inputs.searchQuery;\n    if (searchTerm === '') {\n      return;\n    } else {\n      try {\n        cardsContainer = document.querySelector('.cards-container');\n        // Retrieve rooms search results using Axios\n        const searchResults = await axios.get(`/filters/search_by_title${searchTerm}`);\n        // Retrieve image files using Axios\n        const imageFiles = await axios.get(`/files/retrieve_images`);\n        let imageIndex = 0;\n        // Filter image files array to include only images of rooms matching search results\n        imageFiles.data = imageFiles.data.filter(image => {\n          return searchResults.data.some(resImage => resImage.image_id === image.imageid);\n        });\n        emptyContainer(cardsContainer);\n        searchResults.data.forEach(room => {\n          // If no more images are available, update container and exit loop\n          if (imageIndex >= imageFiles.data.length) {\n            updateContainer(cardsContainer);\n            return;\n          }\n          const imagePath = \"/upload/\" + imageFiles.data[imageIndex].filename;\n          addCardToUI(room.title, room.description, imagePath, room.roomid);\n          imageIndex++;\n        });\n        updateContainer(cardsContainer);\n        return;\n      } catch (error) {\n        showErrorDialog(\"An error occurred:\", error, false, navigate);\n      }\n    }\n  };\n  const toggleModal = e => {\n    e.preventDefault();\n    setModalVisible(!modalVisible);\n  };\n  const handleFilterCalendarChange = async (newDatesRange, event) => {\n    cardsContainer = document.querySelector('.cards-container');\n    // Prevent default form submission behavior\n    event.preventDefault();\n    // Update selected dates\n    setSelectedDates(newDatesRange);\n\n    // Convert dates to ISO string format\n    const checkInDate = newDatesRange[0].toISOString().slice(0, 19).replace('T', ' ');\n    const checkOutDate = newDatesRange[1].toISOString().slice(0, 19).replace('T', ' ');\n\n    // Prepare request parameters\n    const requestParams = {\n      check_in_date: checkInDate,\n      check_out_date: checkOutDate\n    };\n    try {\n      // Fetch available rooms based on the selected dates\n      const availableRoomsResponse = await axios.get('/filters/search_available_rooms', {\n        params: requestParams\n      });\n      emptyContainer(cardsContainer);\n      for (const room of availableRoomsResponse.data) {\n        // Fetch room details by room ID\n        const roomDetailsResponse = await axios.get(`/rooms/by_roomID${room.roomid}`);\n        // Fetch room image by image ID\n        const roomImage = await axios.get(`/files/get_image_by_id${roomDetailsResponse.data[0].image_id}`);\n        // Construct room image path\n        const roomImagePath = \"/upload/\" + roomImage.data[0].filename;\n        // Add room card to the UI\n        addCardToUI(room.title, room.description, roomImagePath, room.roomid);\n      }\n      // Update UI container with new room cards\n      updateContainer(cardsContainer);\n      return;\n    } catch (error) {\n      showErrorDialog(\"An error occurred:\", error, false, navigate);\n    }\n  };\n  return isLoggedIn ?\n  /*#__PURE__*/\n  // Check if user is logged in\n  _jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"searchQuery\",\n          id: \"searchQuery\",\n          onChange: handleChange,\n          placeholder: \"Enter your search query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchImg\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: SearchIcon,\n            alt: \"Search\",\n            id: \"searchImg\",\n            onClick: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: modalVisible ? 'active' : '',\n          id: \"filter-button\",\n          onClick: toggleModal,\n          children: modalVisible ? 'X' : 'Filter'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-modal\",\n          id: \"filter-modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-container\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Calendar, {\n              className: \"filter-calendar\",\n              onChange: (newDatesRange, event) => handleFilterCalendarChange(newDatesRange, event),\n              value: selectedDates,\n              selectRange: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this) // End of body section\n  // Error message if user is not logged in\n  : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showErrorDialog(\"Error: \", \"Login to access\", true, navigate)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 7\n  }, this);\n};\n_s(Home, \"1aYjiGXVeXQzFBZO8HjAbhLMRV0=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useCallback","axios","useNavigate","StarIcon","SearchIcon","CouponIcon","Calendar","Context","AuthContext","emptyContainer","updateContainer","showErrorDialog","jsxDEV","_jsxDEV","Home","_s","isLoggedIn","cardsContainer","modalVisible","setModalVisible","inputs","setInputs","name","desc","searchQuery","delete","filename","changeLastRoomClickedID","navigate","selectedDates","setSelectedDates","addCardToUI","title","description","imageSrc","roomId","newCardHTML","document","querySelector","insertAdjacentHTML","detailsButton","getElementById","addEventListener","e","handleOpenDetails","handleChange","prev","target","value","preventDefault","fetchDataFromServer","roomsResponse","get","imageFilesResponse","imageIndex","data","forEach","room","length","imagePath","roomid","error","handleSearch","searchTerm","searchResults","imageFiles","filter","image","some","resImage","image_id","imageid","toggleModal","handleFilterCalendarChange","newDatesRange","event","checkInDate","toISOString","slice","replace","checkOutDate","requestParams","check_in_date","check_out_date","availableRoomsResponse","params","roomDetailsResponse","roomImage","roomImagePath","className","children","type","id","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","selectRange","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/PI-CI0128-Grupo-X/client/src/pages/Home.jsx"],"sourcesContent":["/* eslint-disable no-use-before-define */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport '../styles.scss';\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport StarIcon from \"../img/Star.png\";\r\nimport SearchIcon from \"../img/Search.png\";\r\nimport CouponIcon from \"../img/Coupon.png\";\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Calendar from 'react-calendar';\r\nimport { Context } from '../Context.js';\r\nimport { AuthContext } from '../AuthContext.js';\r\nimport { emptyContainer, updateContainer, showErrorDialog } from \"../Misc.js\";\r\n\r\nconst Home = () => {\r\n  const { isLoggedIn } = useContext(AuthContext);\r\n  let cardsContainer = null;\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [inputs, setInputs] = useState({\r\n    name: \"\",\r\n    desc: \"\",\r\n    searchQuery: \"\",\r\n    delete: \"\",\r\n    filename: \"\",\r\n  });\r\n  const { changeLastRoomClickedID } = useContext(Context);\r\n  const navigate = useNavigate();\r\n  const [selectedDates, setSelectedDates] = useState(null);\r\n\r\n  const addCardToUI = useCallback((title, description, imageSrc, roomId) => {\r\n    // Construct HTML for a new card dynamically\r\n    const newCardHTML = `\r\n      <div style=\"\r\n        height: 220px;\r\n        background-color: #f0f0f0;\r\n        padding: 20px;\r\n        border-radius: 8px;\r\n        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.5);\r\n        display: grid;\r\n        grid-template-columns: 60% 40%;\r\n        padding-top: 1.5%;\r\n        gap: 10px;\r\n        text-align: justify;\r\n        overflow: hidden;\" className=\"card\" data-title=\"${title}\">\r\n        <div><img src=\"${imageSrc}\" alt=\"View of the room\" style=\"width: 360px;\r\n        height: 220px;\r\n        border-radius: 8px;\"></img></div>\r\n        <div>\r\n          <h2 style=\"\r\n          margin: 0;\r\n          position: static; \r\n          word-wrap: break-word;\"><center>${title}</center></h2>\r\n          <p style=\"\r\n          margin: 3%;\r\n          position: static;\r\n          display: -webkit-box;\r\n          overflow: hidden;\r\n          -webkit-line-clamp: 7;\r\n          -webkit-box-orient: vertical;\r\n          word-wrap: break-word;\">${description}</p>\r\n          <div className=\"icon-container\" style=\"\r\n          margin-top: 4%;\r\n          display: flex;\">\r\n            <div className=\"icon-container-left-column\" style=\"\r\n            margin: 0;\r\n            padding: 0;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            margin-bottom: 4%;\r\n            flex: 60%;\">\r\n              <img src=${StarIcon} alt=\"Star 1\" style=\"\r\n              border-radius: 8px;\r\n              margin: 0;\r\n              padding: 0;\r\n              max-width: 20%;\r\n              height: auto;\"/>\r\n              <img src=${StarIcon} alt=\"Star 2\" style=\"\r\n              border-radius: 8px;\r\n              margin: 0;\r\n              padding: 0;\r\n              max-width: 20%;\r\n              height: auto;\"/>\r\n              <img src=${StarIcon} alt=\"Star 3\" style=\"\r\n              border-radius: 8px;\r\n              margin: 0;\r\n              padding: 0;\r\n              max-width: 20%;\r\n              height: auto;\"/>\r\n              <img src=${StarIcon} alt=\"Star 4\" style=\"\r\n              border-radius: 8px;\r\n              margin: 0;\r\n              padding: 0;\r\n              max-width: 20%;\r\n              height: auto;\"/>\r\n              <img src=${StarIcon} alt=\"Star 5\" style=\"\r\n              border-radius: 8px;\r\n              margin: 0;\r\n              padding: 0;\r\n              max-width: 20%;\r\n              height: auto;\"/>\r\n            </div>\r\n            <div className=\"icon-container-right-column\" style=\"\r\n            margin: 0;\r\n            padding: 0;\r\n            margin-left: 5%;\r\n            flex: 30%;\">\r\n              <img src=${CouponIcon} alt=\"Coupon\" style=\"\r\n              margin-top: 8%;\r\n              border-radius: 8px;\r\n              flex: 1;\r\n              padding: 1%;\r\n              width: 60%;\r\n              height: auto;\"/>\r\n            </div>\r\n            <div className=\"icon-container-right-column-2\" style=\"\r\n            margin: 0;\r\n            padding: 0;\r\n            flex: 20%;\">\r\n            <button id=\"room-details-button-${title}\" style={{margin: \"0%\"}}>Details</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Append the new card to the cards container\r\n    cardsContainer = document.querySelector('.cards-container');\r\n    cardsContainer.insertAdjacentHTML('beforeend', newCardHTML);\r\n    const detailsButton = document.getElementById(\"room-details-button-\" + title);\r\n    detailsButton.addEventListener('click', (e) => handleOpenDetails(e, roomId));\r\n  });\r\n\r\n  const handleChange = e => {\r\n    // Update input state when input values change\r\n    setInputs(prev => ({ ...prev, [e.target.name]: e.target.value }));\r\n  }\r\n\r\n  const handleOpenDetails = async (e, roomId) => {\r\n    // Handle click event to open details page for a room\r\n    e.preventDefault();\r\n    changeLastRoomClickedID(roomId);\r\n    navigate(\"/details\");\r\n  }\r\n\r\n  const fetchDataFromServer = async () => {\r\n    // Fetch data from the server to display rooms\r\n    try {\r\n      cardsContainer = document.querySelector('.cards-container');\r\n      const roomsResponse = await axios.get(\"/rooms\");\r\n      const imageFilesResponse = await axios.get(`/files/retrieve_images`);\r\n      let imageIndex = 0;\r\n      emptyContainer(cardsContainer);\r\n      roomsResponse.data.forEach(room => {\r\n        if (imageIndex >= imageFilesResponse.data.length) {\r\n          updateContainer(cardsContainer);\r\n          return;\r\n        }\r\n        const imagePath = \"/upload/\" + imageFilesResponse.data[imageIndex].filename;\r\n        addCardToUI(room.title, room.description, imagePath, room.roomid);\r\n        imageIndex++;\r\n      });\r\n      updateContainer(cardsContainer);\r\n      return;\r\n    } catch (error) {\r\n      showErrorDialog(\"An error occurred:\", error, false, navigate);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch data when component mounts\r\n    cardsContainer = document.querySelector('.cards-container');\r\n    if (!isLoggedIn) {\r\n      return;\r\n    }\r\n    fetchDataFromServer();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    const searchTerm = inputs.searchQuery;\r\n    if (searchTerm === '') {\r\n      return;\r\n    } else {\r\n      try {\r\n        cardsContainer = document.querySelector('.cards-container');\r\n        // Retrieve rooms search results using Axios\r\n        const searchResults = await axios.get(`/filters/search_by_title${searchTerm}`);\r\n        // Retrieve image files using Axios\r\n        const imageFiles = await axios.get(`/files/retrieve_images`);\r\n        let imageIndex = 0;\r\n        // Filter image files array to include only images of rooms matching search results\r\n        imageFiles.data = imageFiles.data.filter(image => {\r\n          return searchResults.data.some(resImage => resImage.image_id === image.imageid);\r\n        });\r\n        emptyContainer(cardsContainer);\r\n        searchResults.data.forEach(room => {\r\n          // If no more images are available, update container and exit loop\r\n          if (imageIndex >= imageFiles.data.length) {\r\n            updateContainer(cardsContainer);\r\n            return;\r\n          }\r\n          const imagePath = \"/upload/\" + imageFiles.data[imageIndex].filename;\r\n          addCardToUI(room.title, room.description, imagePath, room.roomid);\r\n          imageIndex++;\r\n        });\r\n        updateContainer(cardsContainer);\r\n        return;\r\n      } catch (error) {\r\n        showErrorDialog(\"An error occurred:\", error, false, navigate);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const toggleModal = (e) => {\r\n    e.preventDefault();\r\n    setModalVisible(!modalVisible);\r\n  };\r\n\r\n  const handleFilterCalendarChange = async (newDatesRange, event) => {\r\n    cardsContainer = document.querySelector('.cards-container');\r\n    // Prevent default form submission behavior\r\n    event.preventDefault();\r\n    // Update selected dates\r\n    setSelectedDates(newDatesRange);\r\n\r\n    // Convert dates to ISO string format\r\n    const checkInDate = newDatesRange[0].toISOString().slice(0, 19).replace('T', ' ');\r\n    const checkOutDate = newDatesRange[1].toISOString().slice(0, 19).replace('T', ' ');\r\n\r\n    // Prepare request parameters\r\n    const requestParams = {\r\n      check_in_date: checkInDate,\r\n      check_out_date: checkOutDate,\r\n    };\r\n\r\n    try {\r\n      // Fetch available rooms based on the selected dates\r\n      const availableRoomsResponse = await axios.get('/filters/search_available_rooms', { params: requestParams });\r\n      emptyContainer(cardsContainer);\r\n      for (const room of availableRoomsResponse.data) {\r\n        // Fetch room details by room ID\r\n        const roomDetailsResponse = await axios.get(`/rooms/by_roomID${room.roomid}`);\r\n        // Fetch room image by image ID\r\n        const roomImage = await axios.get(`/files/get_image_by_id${roomDetailsResponse.data[0].image_id}`);\r\n        // Construct room image path\r\n        const roomImagePath = \"/upload/\" + roomImage.data[0].filename;\r\n        // Add room card to the UI\r\n        addCardToUI(room.title, room.description, roomImagePath, room.roomid);\r\n      }\r\n      // Update UI container with new room cards\r\n      updateContainer(cardsContainer);\r\n      return;\r\n    } catch (error) {\r\n      showErrorDialog(\"An error occurred:\", error, false, navigate);\r\n    }\r\n  }\r\n\r\n  return (isLoggedIn ? // Check if user is logged in\r\n    <div className='body'>\r\n      <form>\r\n        <div className=\"search-container\"> {/* Container for search */}\r\n          {/* Input for search query */}\r\n          <input type=\"text\" name=\"searchQuery\" id=\"searchQuery\" onChange={handleChange} placeholder=\"Enter your search query\" />\r\n          {/* Button for search */}\r\n          <button className=\"searchImg\">\r\n            <img src={SearchIcon} alt=\"Search\" id=\"searchImg\" onClick={handleSearch} />\r\n          </button>\r\n          {/* Button for filter, toggle modal visibility */}\r\n          <button className={modalVisible ? 'active' : ''} id=\"filter-button\" onClick={toggleModal}>\r\n            {modalVisible ? 'X' : 'Filter'}\r\n          </button>\r\n          {/* Modal for filter options, visible if modalVisible is true */}\r\n          {modalVisible && (\r\n            <div className=\"filter-modal\" id=\"filter-modal\">\r\n              <div className='calendar-container'> {/* Container for calendar */}\r\n                {/* Calendar component for selecting date range */}\r\n                <Calendar className=\"filter-calendar\"\r\n                  onChange={(newDatesRange, event) => handleFilterCalendarChange(newDatesRange, event)}\r\n                  value={selectedDates}\r\n                  selectRange={true}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"cards-container\"> {/* Container for cards */}\r\n      </div>\r\n    </div > // End of body section\r\n    // Error message if user is not logged in\r\n    : <div>{showErrorDialog(\"Error: \", \"Login to access\", true, navigate)}</div>)\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}