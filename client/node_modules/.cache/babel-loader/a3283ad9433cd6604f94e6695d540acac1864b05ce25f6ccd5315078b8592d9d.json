{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\PI-CI0128-Grupo-X\\\\client\\\\src\\\\pages\\\\ReservationsList.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport '../styles.scss';\nimport axios from \"axios\";\nimport { AuthContext } from '../AuthContext.js';\nimport X from \"../img/X.png\";\nimport Wrench from \"../img/Wrench.png\";\nimport 'react-calendar/dist/Calendar.css';\nimport Calendar from 'react-calendar';\nimport { showErrorDialog, showWarningDialog, calculateNumberOfDays, emptyContainer, updateContainer, deleteDataWithTimeout, putDataWithTimeout } from '../Misc.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservationsList = () => {\n  _s();\n  // Function to add a reservation to the UI\n  const addReservation = (title, check_in, check_out, filename, price, id) => {\n    // Selecting the reservations container\n    const reservationsContainer = document.querySelector('.list-container');\n\n    // Generating HTML for the new reservation\n    const newReservationHTML = `\n    <div class=\"list-item\" style=\"width: 600px; padding: 1%; margin-left: 2%;\">\n      <div style=\"display: flex; align-items: center;\">\n        <img src=\"${filename}\" alt=\"${filename}\" style=\"height: 900px; max-width: 1000px; margin-right: 2%;\" />\n        <div style=\"margin-left: 10px;\">\n          <h3>${title}</h3>\n          <div style=\"display: flex; justify-content: space-between;\">\n            <div style=\"flex: 1;\">\n              <p style=\"max-width: 100%; display: inline-block; margin-bottom: 0%\">Check In:</p>\n              <p>${check_in}</p>\n            </div>\n            <div style=\"flex: 1; margin-left: 10px;\">\n              <p style=\"max-width: 100%; display: inline-block; margin-bottom: 0%\">Check Out:</p>\n              <p>${check_out}</p>\n            </div>\n          </div>\n          <h3 style=\"position: absolute; width: 50%;\">Price: </h3>\n          <p style=\"margin: 1.3%; margin-left: 25%;\">${price}</p>\n        </div>\n      </div>\n      <button class=\"delete-button\" id=\"delete-reservation-button-${id}\" style=\"background-color: transparent; border: none; margin-top: -2%; position: absolute; margin-left: 41%\">\n        <img src=${X} alt=\"X\" id=\"XImg\" style=\"width: 40px; height: 40px; background-color: transparent; margin: 0%;\" />\n      </button>\n      <button class=\"modify-button\" id=\"modify-reservation-button-${id}\" style=\"background-color: transparent; border: none; margin-top: 6%; position: absolute; margin-left: 40.5%\">\n        <img src=${Wrench} alt=\"Wrench\" id=\"WrenchImg\" style=\"width: 40px; height: 40px; background-color: transparent; margin-top: 0%;\" />\n      </button>\n    </div>  \n  `;\n\n    // Inserting the new reservation HTML into the container\n    reservationsContainer.insertAdjacentHTML('beforeend', newReservationHTML);\n\n    // Adding event listener for delete button\n    const deleteButton = document.getElementById(\"delete-reservation-button-\" + id);\n    deleteButton.addEventListener('click', e => handleDelete(e, id));\n\n    // Adding event listener for modify button\n    const modifyButton = document.getElementById(\"modify-reservation-button-\" + id);\n    modifyButton.addEventListener('click', e => handleModify(e, id));\n  };\n  const {\n    userId\n  } = useContext(AuthContext);\n  const [fetched, setFetched] = useState(false);\n  const [reservations, setReservations] = useState([]);\n  const fetchData = useCallback(async () => {\n    // Selecting the services container\n    const servicesContainer = document.querySelector('.list-container');\n    try {\n      // Clearing the services container\n      emptyContainer(servicesContainer);\n\n      // Fetching reservations data for the current user\n      const res = await axios.get(`/reservations/by_userID${userId}`);\n\n      // Iterating through each reservation\n      for (const reservation of res.data) {\n        // Formatting check-in and check-out dates\n        const checkIn = new Date(reservation.check_in).toISOString().slice(0, 19).replace('T', ' ');\n        const checkOut = new Date(reservation.check_out).toISOString().slice(0, 19).replace('T', ' ');\n\n        // Fetching room data for the reservation\n        const res2 = await axios.get(`/rooms/by_roomID${reservation.id_room}`);\n\n        // Fetching image data for the room\n        const image = await axios.get(`/files/get_image_by_id${res2.data[0].image_id}`);\n        const filepath = \"/upload/\" + image.data[0].filename;\n\n        // Fetching payment data for the reservation\n        const res3 = await axios.get(`/payments/payment_byPaymentID${reservation.payment_id}`);\n\n        // Adding reservation to the services container\n        addReservation(res2.data[0].title, checkIn, checkOut, filepath, res3.data[0].price, reservation.reservationid);\n\n        // Updating the services container\n        updateContainer(servicesContainer);\n      }\n      return;\n    } catch (error) {\n      showErrorDialog(\"An error occurred:\", error);\n    }\n  });\n  useEffect(() => {\n    if (!fetched) {\n      fetchData();\n      setFetched(true);\n    }\n  }, [fetchData, fetched]);\n\n  // State variable for room ID\n  const handleModifyConfirm = async e => {\n    // Preventing the default form submission behavior\n    e.preventDefault();\n    try {\n      // Fetching room data based on room ID\n      const res2 = await axios.get(`/rooms/by_roomID${selectedRoomID}`);\n\n      // Fetching room type data based on room type ID\n      const res3 = await axios.get(`/rooms/room_type_ByID${res2.data[0].type_of_room}`);\n\n      // Calculating new price based on selected dates and room type price\n      let new_price = res3.data[0].price * calculateNumberOfDays(selectedDateRange[0], selectedDateRange[1]);\n\n      // Fetching payment data based on payment ID\n      const res4 = await axios.get(`/payments/payment_byPaymentID${reservation[0].payment_id}`);\n\n      // Fetching total service price for the reservation\n      const res5 = await axios.get(`services/get_sum${reservation[0].reservationid}`);\n\n      // Adding total service price to the new price\n      new_price = Math.floor(new_price + res5.data.totalServicePrice);\n\n      // Getting the old price from payment data\n      const old_price = Math.floor(res4.data[0].price);\n\n      // Checking if the new price is greater or lesser than the original\n      if (Math.abs(old_price - new_price) > 1) {\n        // Showing error message if the new price is not valid\n        showErrorDialog(\"Error: \", \"Cannot select a range of dates greater or lesser than the original.\");\n        return;\n      }\n\n      // Creating request object with updated reservation data\n      const req = {\n        check_in: selectedDateRange[0].toISOString().slice(0, 19).replace('T', ' '),\n        check_out: selectedDateRange[1].toISOString().slice(0, 19).replace('T', ' '),\n        reservationID: reservation[0].reservationid\n      };\n\n      // Updating reservation data on the server\n      putDataWithTimeout(\"/reservations/updateReservation\", req);\n\n      // Closing modal\n      closeModal();\n\n      // Resetting date state\n      setSelectedDateRange(null);\n\n      // Fetching updated reservation data\n      fetchData();\n      return;\n    } catch (error) {\n      // Handling errors\n      showErrorDialog(\"An error occurred:\", error);\n    }\n  };\n\n  // State variable for selected date range\n  const [selectedDateRange, setSelectedDateRange] = useState(null);\n  const [selectedRoomID, setSelectedRoomID] = useState(null);\n\n  // Function to handle modification of reservation\n  const handleModify = async (e, reservationId) => {\n    e.preventDefault(); // Preventing default form submission behavior\n    try {\n      // Fetching reservation details by ID\n      const reservationResponse = await axios.get(`/reservations/get_reservation_by_id${reservationId}`);\n\n      // Extract room ID from the response data and set it\n      const roomId = reservationResponse.data[0].id_room;\n      setSelectedRoomID(roomId);\n\n      // Fetch reservations for the specific room\n      const roomReservationsResponse = await axios.get(`/reservations/get_reservations_by_room_id${roomId}`);\n\n      // Set reservations state with the fetched data\n      setReservations(roomReservationsResponse.data);\n      // Display modal for modification\n      displayModal(reservationId);\n      return;\n    } catch (error) {\n      // Displaying error dialog if an error occurs\n      showErrorDialog(\"An error occurred:\", error);\n    }\n  };\n\n  // Function to handle deletion of reservation\n  const handleDelete = async (e, reservationId) => {\n    e.preventDefault(); // Prevent default form submission behavior\n    try {\n      // Fetch reservation data by ID\n      const reservationResponse = await axios.get(`/reservations/get_reservation_by_id${reservationId}`);\n\n      // Extract check-in date from response\n      const checkInDate = new Date(reservationResponse.data[0].check_in);\n\n      // Get current date\n      const currentDate = new Date();\n\n      // Calculate time difference between check-in date and current date\n      const timeDifference = checkInDate.getTime() - currentDate.getTime();\n\n      // Calculate days difference\n      const daysDifference = Math.ceil(timeDifference / (1000 * 3600 * 24));\n\n      // If check-in is within 7 days, show warning\n      if (daysDifference <= 7) {\n        // Fetch payment data by payment ID\n        const paymentResponse = await axios.get(`/payments/payment_byPaymentID${reservationResponse.data[0].payment_id}`);\n\n        // Calculate refund amount\n        const refundAmount = Math.round(paymentResponse.data[0].price * 0.8);\n\n        // Show warning dialog\n        const warningResult = await showWarningDialog(\"Warning\", `Deleting reservation within 7 days of check-in, you'll only receive ${refundAmount} back.`);\n\n        // If user cancels deletion, return\n        if (!warningResult) {\n          return;\n        }\n      }\n\n      // Delete reservation data with timeout\n      await deleteDataWithTimeout(`/reservations/delete${reservationId}`, 500);\n\n      // Fetch updated data\n      fetchData();\n\n      // Log deletion success\n      console.log(\"Deleted\");\n      return;\n    } catch (error) {\n      // Show error dialog if an error occurs\n      showErrorDialog(\"An error occurred:\", error);\n    }\n  };\n  const displayModal = async id => {\n    const response = await axios.get(`/reservations/get_reservation_by_id${id}`);\n    setReservation(response.data);\n    var modal = document.getElementById(\"calendar-modal\");\n    modal.style.display = \"block\";\n  };\n  function closeModal() {\n    var modal = document.getElementById(\"calendar-modal\");\n    modal.style.display = \"none\";\n  }\n\n  // Function to check if the selected date range is available\n  function dateRangeCheck(showDialog) {\n    // Check if selectedDateRange exists\n    if (!selectedDateRange) {\n      return false;\n    }\n\n    // Check if the end date of the range is selected\n    if (!selectedDateRange[1]) {\n      return false;\n    }\n\n    // Iterate through each reservation to check for overlap\n    for (const reservation of reservations) {\n      // Convert reservation check-in and check-out dates to Date objects\n      const checkInDate = new Date(reservation.check_in);\n      const checkOutDate = new Date(reservation.check_out);\n\n      // Check if the selected date range overlaps with any reservation\n      if (selectedDateRange[1] >= checkInDate && selectedDateRange[0] <= checkOutDate) {\n        // If overlap found, reset selectedDateRange and show error dialog if showDialog is true\n        setSelectedDateRange(null);\n        if (showDialog) {\n          showErrorDialog(\"Error: \", \"The chosen date range is already occupied, please select a new one.\");\n        }\n        return false;\n      }\n    }\n\n    // If no overlap found, return true\n    return true;\n  }\n  const [reservation, setReservation] = useState(new Date());\n  // Function to determine if a date should be disabled in the calendar tile\n  const tileDisabled = ({\n    date\n  }) => {\n    // Check if there is a single reservation\n    if (reservation[0]) {\n      // Extract check-in and check-out dates from the reservation\n      const checkInDate = new Date(reservation[0].check_in).toISOString().slice(0, 19).replace('T', ' ');\n      const checkOutDate = new Date(reservation[0].check_out).toISOString().slice(0, 19).replace('T', ' ');\n\n      // Check if the date falls within the reservation period\n      if (date >= new Date(checkInDate) && date <= new Date(checkOutDate)) {\n        return true;\n      }\n    }\n\n    // Check if there are multiple reservations\n    if (reservations) {\n      // Iterate through each reservation\n      for (const reservation of reservations) {\n        // Extract check-in and check-out dates from the reservation\n        const checkInDate = new Date(reservation.check_in);\n        const checkOutDate = new Date(reservation.check_out);\n\n        // Check if the date falls within any reservation period\n        if (date >= checkInDate && date <= checkOutDate) {\n          return true;\n        }\n      }\n    }\n\n    // If the date is in the past, disable it\n    const today = new Date();\n    return date < today;\n  };\n\n  // Return statement rendering the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"calendar-modal\",\n          className: \"form-modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: closeModal,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), selectedDateRange && selectedDateRange.length > 0 && dateRangeCheck(true) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-modal-calendar\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-date\",\n                children: [\"Fecha llegada: \", selectedDateRange[0].getDate(), \"/\", selectedDateRange[0].getMonth() + 1, \"/\", selectedDateRange[0].getFullYear()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-date\",\n                children: [\"Fecha salida:  \", selectedDateRange[1].getDate(), \"/\", selectedDateRange[1].getMonth() + 1, \"/\", selectedDateRange[1].getFullYear()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-modal-calendar\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-date\",\n                children: \"Fecha llegada: --/--/----\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-date\",\n                children: \"Fecha salida: --/--/----\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n              className: \"modal-calendar\",\n              id: \"modal-calendar-1\",\n              value: selectedDateRange,\n              selectRange: true,\n              tileDisabled: tileDisabled,\n              onChange: setSelectedDateRange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${!(selectedDateRange && selectedDateRange.length > 0 && dateRangeCheck(false)) ? 'modal-disabled-button' : 'modal-calendar-button'}`,\n              onClick: handleModifyConfirm,\n              disabled: !(selectedDateRange && selectedDateRange.length > 0 && dateRangeCheck(false)),\n              children: /*#__PURE__*/_jsxDEV(\"center\", {\n                children: \"Confirm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"amenities-title\",\n            children: /*#__PURE__*/_jsxDEV(\"center\", {\n              children: \"Reservations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservationsList, \"TkMb/GpzcgrnlX89Hx84gV/0XaM=\");\n_c = ReservationsList;\nexport default ReservationsList;\nvar _c;\n$RefreshReg$(_c, \"ReservationsList\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","axios","AuthContext","X","Wrench","Calendar","showErrorDialog","showWarningDialog","calculateNumberOfDays","emptyContainer","updateContainer","deleteDataWithTimeout","putDataWithTimeout","jsxDEV","_jsxDEV","ReservationsList","_s","addReservation","title","check_in","check_out","filename","price","id","reservationsContainer","document","querySelector","newReservationHTML","insertAdjacentHTML","deleteButton","getElementById","addEventListener","e","handleDelete","modifyButton","handleModify","userId","fetched","setFetched","reservations","setReservations","fetchData","servicesContainer","res","get","reservation","data","checkIn","Date","toISOString","slice","replace","checkOut","res2","id_room","image","image_id","filepath","res3","payment_id","reservationid","error","handleModifyConfirm","preventDefault","selectedRoomID","type_of_room","new_price","selectedDateRange","res4","res5","Math","floor","totalServicePrice","old_price","abs","req","reservationID","closeModal","setSelectedDateRange","setSelectedRoomID","reservationId","reservationResponse","roomId","roomReservationsResponse","displayModal","checkInDate","currentDate","timeDifference","getTime","daysDifference","ceil","paymentResponse","refundAmount","round","warningResult","console","log","response","setReservation","modal","style","display","dateRangeCheck","showDialog","checkOutDate","tileDisabled","date","today","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","getDate","getMonth","getFullYear","value","selectRange","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/PI-CI0128-Grupo-X/client/src/pages/ReservationsList.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useContext, useEffect, useCallback } from 'react'\r\nimport '../styles.scss';\r\nimport axios from \"axios\"\r\nimport { AuthContext } from '../AuthContext.js';\r\nimport X from \"../img/X.png\"\r\nimport Wrench from \"../img/Wrench.png\"\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Calendar from 'react-calendar';\r\nimport { showErrorDialog, showWarningDialog, calculateNumberOfDays, emptyContainer, updateContainer, deleteDataWithTimeout, putDataWithTimeout } from '../Misc.js';\r\n\r\nconst ReservationsList = () => {\r\n  // Function to add a reservation to the UI\r\n  const addReservation = (title, check_in, check_out, filename, price, id) => {\r\n    // Selecting the reservations container\r\n    const reservationsContainer = document.querySelector('.list-container');\r\n\r\n    // Generating HTML for the new reservation\r\n    const newReservationHTML = `\r\n    <div class=\"list-item\" style=\"width: 600px; padding: 1%; margin-left: 2%;\">\r\n      <div style=\"display: flex; align-items: center;\">\r\n        <img src=\"${filename}\" alt=\"${filename}\" style=\"height: 900px; max-width: 1000px; margin-right: 2%;\" />\r\n        <div style=\"margin-left: 10px;\">\r\n          <h3>${title}</h3>\r\n          <div style=\"display: flex; justify-content: space-between;\">\r\n            <div style=\"flex: 1;\">\r\n              <p style=\"max-width: 100%; display: inline-block; margin-bottom: 0%\">Check In:</p>\r\n              <p>${check_in}</p>\r\n            </div>\r\n            <div style=\"flex: 1; margin-left: 10px;\">\r\n              <p style=\"max-width: 100%; display: inline-block; margin-bottom: 0%\">Check Out:</p>\r\n              <p>${check_out}</p>\r\n            </div>\r\n          </div>\r\n          <h3 style=\"position: absolute; width: 50%;\">Price: </h3>\r\n          <p style=\"margin: 1.3%; margin-left: 25%;\">${price}</p>\r\n        </div>\r\n      </div>\r\n      <button class=\"delete-button\" id=\"delete-reservation-button-${id}\" style=\"background-color: transparent; border: none; margin-top: -2%; position: absolute; margin-left: 41%\">\r\n        <img src=${X} alt=\"X\" id=\"XImg\" style=\"width: 40px; height: 40px; background-color: transparent; margin: 0%;\" />\r\n      </button>\r\n      <button class=\"modify-button\" id=\"modify-reservation-button-${id}\" style=\"background-color: transparent; border: none; margin-top: 6%; position: absolute; margin-left: 40.5%\">\r\n        <img src=${Wrench} alt=\"Wrench\" id=\"WrenchImg\" style=\"width: 40px; height: 40px; background-color: transparent; margin-top: 0%;\" />\r\n      </button>\r\n    </div>  \r\n  `;\r\n\r\n    // Inserting the new reservation HTML into the container\r\n    reservationsContainer.insertAdjacentHTML('beforeend', newReservationHTML);\r\n\r\n    // Adding event listener for delete button\r\n    const deleteButton = document.getElementById(\"delete-reservation-button-\" + id);\r\n    deleteButton.addEventListener('click', (e) => handleDelete(e, id));\r\n\r\n    // Adding event listener for modify button\r\n    const modifyButton = document.getElementById(\"modify-reservation-button-\" + id);\r\n    modifyButton.addEventListener('click', (e) => handleModify(e, id));\r\n  };\r\n\r\n  const { userId } = useContext(AuthContext);\r\n  const [fetched, setFetched] = useState(false);\r\n  const [reservations, setReservations] = useState([]);\r\n  const fetchData = useCallback(async () => {\r\n    // Selecting the services container\r\n    const servicesContainer = document.querySelector('.list-container');\r\n\r\n    try {\r\n      // Clearing the services container\r\n      emptyContainer(servicesContainer);\r\n\r\n      // Fetching reservations data for the current user\r\n      const res = await axios.get(`/reservations/by_userID${userId}`);\r\n\r\n      // Iterating through each reservation\r\n      for (const reservation of res.data) {\r\n        // Formatting check-in and check-out dates\r\n        const checkIn = new Date(reservation.check_in).toISOString().slice(0, 19).replace('T', ' ');\r\n        const checkOut = new Date(reservation.check_out).toISOString().slice(0, 19).replace('T', ' ');\r\n\r\n        // Fetching room data for the reservation\r\n        const res2 = await axios.get(`/rooms/by_roomID${reservation.id_room}`);\r\n\r\n        // Fetching image data for the room\r\n        const image = await axios.get(`/files/get_image_by_id${res2.data[0].image_id}`);\r\n        const filepath = \"/upload/\" + image.data[0].filename;\r\n\r\n        // Fetching payment data for the reservation\r\n        const res3 = await axios.get(`/payments/payment_byPaymentID${reservation.payment_id}`);\r\n\r\n        // Adding reservation to the services container\r\n        addReservation(res2.data[0].title, checkIn, checkOut, filepath, res3.data[0].price, reservation.reservationid);\r\n\r\n        // Updating the services container\r\n        updateContainer(servicesContainer);\r\n      }\r\n      return;\r\n    } catch (error) {\r\n      showErrorDialog(\"An error occurred:\", error);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!fetched) {\r\n      fetchData();\r\n      setFetched(true);\r\n    }\r\n  }, [fetchData, fetched]);\r\n\r\n  // State variable for room ID\r\n  const handleModifyConfirm = async (e) => {\r\n    // Preventing the default form submission behavior\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Fetching room data based on room ID\r\n      const res2 = await axios.get(`/rooms/by_roomID${selectedRoomID}`);\r\n\r\n      // Fetching room type data based on room type ID\r\n      const res3 = await axios.get(`/rooms/room_type_ByID${res2.data[0].type_of_room}`);\r\n\r\n      // Calculating new price based on selected dates and room type price\r\n      let new_price = (res3.data[0].price * (calculateNumberOfDays(selectedDateRange[0], selectedDateRange[1])));\r\n\r\n      // Fetching payment data based on payment ID\r\n      const res4 = await axios.get(`/payments/payment_byPaymentID${reservation[0].payment_id}`);\r\n\r\n      // Fetching total service price for the reservation\r\n      const res5 = await axios.get(`services/get_sum${reservation[0].reservationid}`);\r\n\r\n      // Adding total service price to the new price\r\n      new_price = Math.floor(new_price + res5.data.totalServicePrice);\r\n\r\n      // Getting the old price from payment data\r\n      const old_price = Math.floor(res4.data[0].price);\r\n\r\n      // Checking if the new price is greater or lesser than the original\r\n      if (Math.abs(old_price - new_price) > 1) {\r\n        // Showing error message if the new price is not valid\r\n        showErrorDialog(\"Error: \", \"Cannot select a range of dates greater or lesser than the original.\");\r\n        return;\r\n      }\r\n      \r\n      // Creating request object with updated reservation data\r\n      const req = {\r\n        check_in: selectedDateRange[0].toISOString().slice(0, 19).replace('T', ' '),\r\n        check_out: selectedDateRange[1].toISOString().slice(0, 19).replace('T', ' '),\r\n        reservationID: reservation[0].reservationid,\r\n      };\r\n\r\n      // Updating reservation data on the server\r\n      putDataWithTimeout(\"/reservations/updateReservation\", req);\r\n\r\n      // Closing modal\r\n      closeModal();\r\n\r\n      // Resetting date state\r\n      setSelectedDateRange(null);\r\n\r\n      // Fetching updated reservation data\r\n      fetchData();\r\n\r\n      return;\r\n    } catch (error) {\r\n      // Handling errors\r\n      showErrorDialog(\"An error occurred:\", error);\r\n    }\r\n  };\r\n\r\n  // State variable for selected date range\r\n  const [selectedDateRange, setSelectedDateRange] = useState(null);\r\n  const [selectedRoomID, setSelectedRoomID] = useState(null);\r\n\r\n  // Function to handle modification of reservation\r\n  const handleModify = async (e, reservationId) => {\r\n    e.preventDefault(); // Preventing default form submission behavior\r\n    try {\r\n      // Fetching reservation details by ID\r\n      const reservationResponse = await axios.get(`/reservations/get_reservation_by_id${reservationId}`);\r\n\r\n      // Extract room ID from the response data and set it\r\n      const roomId = reservationResponse.data[0].id_room;\r\n      setSelectedRoomID(roomId)\r\n\r\n      // Fetch reservations for the specific room\r\n      const roomReservationsResponse = await axios.get(`/reservations/get_reservations_by_room_id${roomId}`);\r\n\r\n      // Set reservations state with the fetched data\r\n      setReservations(roomReservationsResponse.data);\r\n      // Display modal for modification\r\n      displayModal(reservationId);\r\n      return;\r\n    } catch (error) {\r\n      // Displaying error dialog if an error occurs\r\n      showErrorDialog(\"An error occurred:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to handle deletion of reservation\r\n  const handleDelete = async (e, reservationId) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n    try {\r\n      // Fetch reservation data by ID\r\n      const reservationResponse = await axios.get(`/reservations/get_reservation_by_id${reservationId}`);\r\n\r\n      // Extract check-in date from response\r\n      const checkInDate = new Date(reservationResponse.data[0].check_in);\r\n\r\n      // Get current date\r\n      const currentDate = new Date();\r\n\r\n      // Calculate time difference between check-in date and current date\r\n      const timeDifference = checkInDate.getTime() - currentDate.getTime();\r\n\r\n      // Calculate days difference\r\n      const daysDifference = Math.ceil(timeDifference / (1000 * 3600 * 24));\r\n\r\n      // If check-in is within 7 days, show warning\r\n      if (daysDifference <= 7) {\r\n        // Fetch payment data by payment ID\r\n        const paymentResponse = await axios.get(`/payments/payment_byPaymentID${reservationResponse.data[0].payment_id}`);\r\n\r\n        // Calculate refund amount\r\n        const refundAmount = Math.round(paymentResponse.data[0].price * 0.8);\r\n\r\n        // Show warning dialog\r\n        const warningResult = await showWarningDialog(\"Warning\", `Deleting reservation within 7 days of check-in, you'll only receive ${refundAmount} back.`);\r\n\r\n        // If user cancels deletion, return\r\n        if (!warningResult) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Delete reservation data with timeout\r\n      await deleteDataWithTimeout(`/reservations/delete${reservationId}`, 500);\r\n\r\n      // Fetch updated data\r\n      fetchData();\r\n\r\n      // Log deletion success\r\n      console.log(\"Deleted\");\r\n      return;\r\n    } catch (error) {\r\n      // Show error dialog if an error occurs\r\n      showErrorDialog(\"An error occurred:\", error);\r\n    }\r\n  }\r\n\r\n  const displayModal = async (id) => {\r\n    const response = await axios.get(`/reservations/get_reservation_by_id${id}`);\r\n    setReservation(response.data)\r\n    var modal = document.getElementById(\"calendar-modal\");\r\n    modal.style.display = \"block\";\r\n  }\r\n\r\n  function closeModal() {\r\n    var modal = document.getElementById(\"calendar-modal\");\r\n    modal.style.display = \"none\";\r\n  }\r\n\r\n  // Function to check if the selected date range is available\r\n  function dateRangeCheck(showDialog) {\r\n    // Check if selectedDateRange exists\r\n    if (!selectedDateRange) {\r\n      return false;\r\n    }\r\n\r\n    // Check if the end date of the range is selected\r\n    if (!selectedDateRange[1]) {\r\n      return false;\r\n    }\r\n\r\n    // Iterate through each reservation to check for overlap\r\n    for (const reservation of reservations) {\r\n      // Convert reservation check-in and check-out dates to Date objects\r\n      const checkInDate = new Date(reservation.check_in);\r\n      const checkOutDate = new Date(reservation.check_out);\r\n\r\n      // Check if the selected date range overlaps with any reservation\r\n      if (selectedDateRange[1] >= checkInDate && selectedDateRange[0] <= checkOutDate) {\r\n        // If overlap found, reset selectedDateRange and show error dialog if showDialog is true\r\n        setSelectedDateRange(null);\r\n        if (showDialog) {\r\n          showErrorDialog(\"Error: \", \"The chosen date range is already occupied, please select a new one.\");\r\n        }\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // If no overlap found, return true\r\n    return true;\r\n  }\r\n\r\n\r\n  const [reservation, setReservation] = useState(new Date());\r\n  // Function to determine if a date should be disabled in the calendar tile\r\n  const tileDisabled = ({ date }) => {\r\n    // Check if there is a single reservation\r\n    if (reservation[0]) {\r\n      // Extract check-in and check-out dates from the reservation\r\n      const checkInDate = new Date(reservation[0].check_in).toISOString().slice(0, 19).replace('T', ' ');\r\n      const checkOutDate = new Date(reservation[0].check_out).toISOString().slice(0, 19).replace('T', ' ');\r\n\r\n      // Check if the date falls within the reservation period\r\n      if (date >= new Date(checkInDate) && date <= new Date(checkOutDate)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // Check if there are multiple reservations\r\n    if (reservations) {\r\n      // Iterate through each reservation\r\n      for (const reservation of reservations) {\r\n        // Extract check-in and check-out dates from the reservation\r\n        const checkInDate = new Date(reservation.check_in);\r\n        const checkOutDate = new Date(reservation.check_out);\r\n\r\n        // Check if the date falls within any reservation period\r\n        if (date >= checkInDate && date <= checkOutDate) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    // If the date is in the past, disable it\r\n    const today = new Date();\r\n    return date < today;\r\n  }\r\n\r\n  // Return statement rendering the component\r\n  return (\r\n    <div className='body'>\r\n      <div>\r\n        <div className='admin-container'>\r\n          {/* Calendar Modal */}\r\n          {(\r\n            <div id=\"calendar-modal\" className='form-modal'>\r\n              <div className=\"calendar-modal-content\">\r\n                {/* Close button */}\r\n                <span className=\"close\" onClick={closeModal}>&times;</span>\r\n                {/* Selected date range display */}\r\n                {selectedDateRange && selectedDateRange.length > 0 && dateRangeCheck(true) ? (\r\n                  <div className='text-modal-calendar'>\r\n                    {/* Display selected check-in date */}\r\n                    <label className='text-date'>Fecha llegada: {selectedDateRange[0].getDate()}/{selectedDateRange[0].getMonth() + 1}/{selectedDateRange[0].getFullYear()}</label>\r\n                    {/* Display selected check-out date */}\r\n                    <label className='text-date'>Fecha salida:  {selectedDateRange[1].getDate()}/{selectedDateRange[1].getMonth() + 1}/{selectedDateRange[1].getFullYear()}</label>\r\n                  </div>\r\n                ) : (\r\n                  <div className='text-modal-calendar'>\r\n                    {/* Display placeholder for check-in date */}\r\n                    <span className='text-date'>Fecha llegada: --/--/----</span>\r\n                    {/* Display placeholder for check-out date */}\r\n                    <span className='text-date'>Fecha salida: --/--/----</span>\r\n                  </div>\r\n                )}\r\n                {/* Calendar component */}\r\n                <Calendar className=\"modal-calendar\" id=\"modal-calendar-1\"\r\n                  value={selectedDateRange}\r\n                  selectRange={true}\r\n                  tileDisabled={tileDisabled}\r\n                  onChange={setSelectedDateRange}\r\n                />\r\n                {/* Confirm button */}\r\n                <button className={`${!(selectedDateRange && selectedDateRange.length > 0 && dateRangeCheck(false)) ? 'modal-disabled-button' : 'modal-calendar-button'}`} onClick={handleModifyConfirm} disabled={!(selectedDateRange && selectedDateRange.length > 0 && dateRangeCheck(false))}>\r\n                  <center>Confirm</center>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* Reservation List */}\r\n          <div>\r\n            <h1 className='amenities-title'><center>Reservations</center></h1>\r\n            <div className=\"list-container\">\r\n              {/* Reservation items will be rendered here */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservationsList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}